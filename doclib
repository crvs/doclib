#!/bin/sh

if [ "$DOCLIB_LIBRARY" = "" ]; then
	export LIBRARY=$HOME/.config/doclib
else
	export LIBRARY=$DOCLIB_LIBRARY
fi

if [ -f $LIBRARY/doclibrc ]; then
	source $LIBRARY/doclibrc
fi

if [ ! -d $LIBRARY ]; then
	read -r -p "Library not present, create? [Y/n]" RESP
	if [ $(echo $RESP | egrep -i '^n$') ] ; then
		echo Aborted
		exit 1
	else
		mkdir -p $LIBRARY
		exit 0
	fi
fi

__printusage() {
	cat << EOF
usage:
     doclib [add filename] [list filter] [view filter] [note filter] [get filter]
        [edit filter] [remove filter] [dmenu] [help]
commands:
    add filename     adds the file to the doclib library
    list filter      filter the doclib library
    view filter      prompt to open file in viewer
    get filter       prompt to place file in the current directory
    note filter      prompt to read and/or edit notes file
    edit filter      prompt to edit notes file
    remove filter    prompt to remove file from library
    dmenu            dmenu prompt to open file in viewer
    help             prints this usage in less
    <no command>     prints this usage string

for full documentation see doclib(1)
EOF
	}

__manifest() {
	# create the manifest file as well as the associated comments file list
	FILTER="$1"

	export CFILES=$(mktemp)
	egrep -i "$FILTER" $LIBRARY/*.txt 2>/dev/null | \
		awk -vFS=: '{print $1}' | \
		uniq > \
		$CFILES

	export MANIFEST=$(mktemp)
	COUNT=1
	for f in $(cat $CFILES); do
		echo $COUNT: >> $MANIFEST
		COUNT=$(( COUNT + 1 ))
		cat $f | sed -n '/^-*$/q;p' >> $MANIFEST
		echo >> $MANIFEST
	done
}

case $1 in
add)
	if [ ${2##*.} = 'pdf' ] ; then
		NAMEROOT=$(md5sum "$2" | awk '{print $1}')$(date +"%Y%m%d%H%M%S")
		FILE=${LIBRARY}/${NAMEROOT}.pdf
		mv "$2" $FILE
		COMMENTS=${LIBRARY}/${NAMEROOT}.txt
		pdfinfo $FILE | egrep -i '^(Title|Author|Keywords|CreationDate)' >> $COMMENTS
		echo "Added:          $(date)" >> $COMMENTS
		xdg-open $FILE 2>&1 1>/dev/null &
		$EDITOR $COMMENTS
	else
		echo "only pdf files are accepted"
	fi
	;;
list)
	__manifest "$2"
	cat $MANIFEST
	;;
view)
	__manifest "$2"
	cat $MANIFEST
	printf "insert file number: "
	read NUM
	if [ $(echo $NUM | egrep '^[0-9]+$') ]; then
		CFILE=$(cat $CFILES | sed -n $NUM'p')
		xdg-open ${CFILE%txt}pdf 2>&1 1>/dev/null &
	else
		clear
		$0 view $NUM
	fi
	;;
get)
	__manifest "$2"
	cat $MANIFEST
	printf "insert file number: "
	read NUM
	if [ $(echo $NUM | egrep '^[0-9]+$') ]; then
		CFILE=$(cat $CFILES | sed -n $NUM'p')
		FILE=$(cat $CFILE | sed -n '/^Title:/p;/^-*$/q' | sed 's/^Title: *//;s/ \+/_/g;s/$/.pdf/')
		if [ -f $FILE ]; then
			echo "$FILE already present please move it or remove it before trying to get this file"
			exit 1
		else
			cp ${CFILE%.txt}.pdf $FILE
			echo $FILE
		fi
	else
		clear
		$0 get $NUM
	fi
	;;
edit)
	__manifest "$2"
	cat $MANIFEST
	printf "insert file number: "
	read NUM
	if [ $(echo $NUM | egrep '^[0-9]+$') ]; then
		CFILE=$(cat $CFILES | sed -n $NUM'p')
		xdg-open ${CFILE%txt}pdf 2>&1 1>/dev/null &
		$EDITOR $CFILE
	else
		clear
		$0 edit $NUM
	fi
	;;
note)
	__manifest "$2"
	cat $MANIFEST
	printf "insert file number: "
	read NUM
	if [ $(echo $NUM | egrep '^[0-9]+$') ]; then
		CFILE=$(cat $CFILES | sed -n $NUM'p')
		$EDITOR $CFILE
	else
		clear
		$0 note $NUM
	fi
	;;
remove)
	__manifest "$2"
	cat $MANIFEST
	printf "insert file number: "
	read NUM
	if [ $(echo $NUM | egrep '^[0-9]+$') ]; then
		CFILE=$(cat $CFILES | sed -n $NUM'p')
		head $CFILE
		read -r -p "are you sure you want to remove this file? [y/N]" RESP
		if [ $(echo $RESP | egrep -i '^y$') ] ; then
			mv $CFILE $HOME/doclib_rm_${CFILE##*/}
			PFILE=${CFILE%txt}pdf
			mv $PFILE $HOME/doclib_rm_${PFILE##*/}
		fi
	else
		clear
		$0 remove $NUM
	fi
	;;
dmenu)
	__manifest ""
	NUM=$(cat $MANIFEST | \
		 awk -vRS='\n\n' -vFS='\n' '{ for (i = 2; i < $NF ; i++ ){ sub(/^[A-Za-z]+: */,"",$i) } printf("%s %s || %s || %s\n", $1 , $2 , $4 , $3) }' | \
		 dmenu -p 'select paper:' -l 10 -i | awk '{sub(/: *$/,"",$1) ; print $1}'
	 )

	if [ $(echo ${NUM} | egrep '^[0-9]+$') ]; then
		CFILE=$(cat $CFILES | sed -n ${NUM}'p')
		xdg-open ${CFILE%.txt}.pdf 2>&1 1>/dev/null &
	fi
	;;
help)
	__printusage | less
	;;
*)
	__printusage
	;;
esac

